# Getting started with django models

#Setup mysql as Db
1. we need to install mysqlclient package
2. pip install mysqlclient
3. Configure  Db settings in settings.py file
4. DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'store',         
        'USER': 'root',       
        'PASSWORD': '',   
        'HOST': 'localhost',
        'PORT': '3306', 
    }
}
5. Building models
6.Defining choices field
7. Defining one to one relationship
8. Defining one to many relationship
9. Defining many to many relationship
10. Resolving circular relationship
11. Generic  relationship to solve dependend models
11. To change the table names we use django meta data
11. To revert previous migration run python manage.py migrate store 0003 
12. delete the migration file 0004 also delete the changes in model otherwise next time django will create migration again
13. git reset --hard  HEAD~1
14. python manage.py makemigrations
15. python manage.py sqlmigrate
16. python manage.py migrate
17. Run raw sql 
python manage.py makemigrations store --empty
class Migration(migrations.Migration):

    dependencies = [
        ('store', '0001_initial'),
    ]

    operations = [
        migrations.RunSQL("""
                    INSERT INTO store_collection(title)
                    VALUES('collection1')
                          """,
                    """ 
                    DELETE store_collection
                    where title = 'collection1'
""")
    ]
18. python manage.py migrate
19. Populate dummy data using mackaroo
20. Products : inventory < 10 price < 20
21. Complex lookups using Q objects 
Reference below 
https://docs.djangoproject.com/en/5.0/topics/db/queries/#complex-lookups-with-q
22. F Objects to compare field with related field
23.  Sorting Objects
25: Limit Clause
26. Selecting fields with inner join
27. Selecting prefetched related
28. Aggregates functions in django
30. Annotating objects creating fields in run time
31. Calling Database functions CONCAT
32. WE can also use short by importing CONCAT Class
You can go check all the functions 
" https://docs.djangoproject.com/en/5.0/ref/models/database-functions/ "
33. Grouping Data using left join and inner join
34. Expressionwrapper class for complex expression
35. Generic Relationship 
36. Custom Manager
37.Creating objects
38.Updating Objects